apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: poc-cluster
  region: us-east-1

vpc: # Existing Amazon VPC
  clusterEndpoints:
    publicAccess:  true
    privateAccess: true
  id: "vpc-0c2cdbcb1a891f179"
  cidr: "10.2.0.0/16"
  subnets:
    private:
      us-east-1a:
          id: "subnet-060059c30de92792d"
          cidr: "10.2.2.0/24"

      us-east-1b:
          id: "subnet-0e324d144cd60ec91"
          cidr: "10.2.3.0/24" 
                
    public:
      us-east-1a:
          id: "subnet-040bb5d519bfcf754"
          cidr: "10.2.0.0/24"

      us-east-1b:
          id: "subnet-0f06c77f3d61752cd"
          cidr: "10.2.1.0/24"

iam:
  serviceRoleARN: "arn:aws:iam::936068047509:role/eksClusterRole"

# Example with managed node group for Amazon EKS
managedNodeGroups:
  - name: app-node-group
    instanceType: t2.medium
    minSize: 1
    desiredCapacity: 1
    maxSize: 4
    availabilityZones: ["us-east-1a", "us-east-1b"]
    volumeSize: 20
    privateNetworking: true # Launch in private subnets only

    ssh:
      allow: false
      # publicKeyPath: ~/.ssh/ec2_id_rsa.pub
      # sourceSecurityGroupIds: ["sg-09b2a55e337f21e5e"]

    labels: {role: worker}
    tags:
      nodegroup-role: worker
    
    iam:
      instanceRoleARN: "arn:aws:iam::936068047509:role/NodeInstanceRole"
      # withAddonPolicies: # Add policies to IAM Role addon
      #   imageBuilder: true
      #   autoScaler: true
      #   externalDNS: true
      #   certManager: true
      #   appMesh: true
      #   ebs: true
      #   fsx: true
      #   efs: true
      #   albIngress: true
      #   xRay: true
      #   cloudWatch: true

cloudWatch:
  clusterLogging:
    # enable specific types of cluster control plane logs
    enableTypes: ["audit", "authenticator", "controllerManager"]
    # all supported types: "api", "audit", "authenticator", "controllerManager", "scheduler"
    # supported special values: "*" and "all"

# nodeGroups:
#   - name: ng-1

#     instanceType: m5.large
#     desiredCapacity: 3
#     iam:
#       instanceProfileARN: "arn:aws:iam::11111:instance-profile/eks-nodes-base-role"
#       instanceRoleARN: "arn:aws:iam::1111:role/eks-nodes-base-role"
#     privateNetworking: true
#     securityGroups:
#       withShared: true
#       withLocal: true
#       attachIDs: ['sg-11111', 'sg-11112']
#     ssh:
#       publicKeyName: 'my-instance-key'
#     tags:
#       'environment:basedomain': 'example.org'